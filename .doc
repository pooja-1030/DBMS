mysql> CREATE DATABASE IF NOT EXISTS SocialMediaDB;USE SocialMediaDB;
Query OK, 1 row affected (1.85 sec)

Database changed
mysql> CREATE TABLE IF NOT EXISTS Posts (    post_id INT AUTO_INCREMENT PRIMARY KEY,    user_id INT NOT NULL,    content TEXT NOT NULL,    created_at DATETIME DEFAULT NOW(),    likes INT DEFAULT 0);
Query OK, 0 rows affected (2.88 sec)

mysql> INSERT INTO Posts (user_id, content, created_at, likes) VALUES(1, 'First post!', '2024-02-10 14:30:00', 10),(2, 'Hello world!', '2024-02-11 09:15:00', 25),(3, 'Good morning!', '2024-02-12 07:45:00', 50);-- DATE AND TIME FUNCTIONS DEMONSTRATION
Query OK, 3 rows affected (0.69 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> SELECT CURRENT_DATE() AS CurrentDate;
+-------------+
| CurrentDate |
+-------------+
| 2025-02-17  |
+-------------+
1 row in set (0.17 sec)

mysql> SELECT CURTIME() AS CurrentTime;
+-------------+
| CurrentTime |
+-------------+
| 20:17:58    |
+-------------+
1 row in set (0.00 sec)

mysql> SELECT CURTIME() AS CurrentTime;
+-------------+
| CurrentTime |
+-------------+
| 20:18:05    |
+-------------+
1 row in set (0.00 sec)

mysql> SELECT post_id, DATE(created_at) AS PostDate FROM Posts;
+---------+------------+
| post_id | PostDate   |
+---------+------------+
|       1 | 2024-02-10 |
|       2 | 2024-02-11 |
|       3 | 2024-02-12 |
+---------+------------+
3 rows in set (0.02 sec)

mysql> SELECT post_id, TIME(created_at) AS PostTime FROM Posts;
+---------+----------+
| post_id | PostTime |
+---------+----------+
|       1 | 14:30:00 |
|       2 | 09:15:00 |
|       3 | 07:45:00 |
+---------+----------+
3 rows in set (0.00 sec)

mysql> SELECT DATEDIFF('2024-02-12', '2024-02-10') AS DaysDifference;
+----------------+
| DaysDifference |
+----------------+
|              2 |
+----------------+
1 row in set (0.34 sec)

mysql> SELECT post_id, DATE_ADD(created_at, INTERVAL 7 DAY) AS ExpiryDate FROM Posts;
+---------+---------------------+
| post_id | ExpiryDate          |
+---------+---------------------+
|       1 | 2024-02-17 14:30:00 |
|       2 | 2024-02-18 09:15:00 |
|       3 | 2024-02-19 07:45:00 |
+---------+---------------------+
3 rows in set (0.19 sec)

mysql> SELECT post_id, DATE_SUB(created_at, INTERVAL 3 DAY) AS ModifiedDate FROM Posts;
+---------+---------------------+
| post_id | ModifiedDate        |
+---------+---------------------+
|       1 | 2024-02-07 14:30:00 |
|       2 | 2024-02-08 09:15:00 |
|       3 | 2024-02-09 07:45:00 |
+---------+---------------------+
3 rows in set (0.00 sec)

mysql> SELECT ABS(-5) AS AbsoluteLikes;
+---------------+
| AbsoluteLikes |
+---------------+
|             5 |
+---------------+
1 row in set (1.39 sec)

mysql> SELECT CEIL(AVG(likes)) AS RoundedUpLikes FROM Posts;
+----------------+
| RoundedUpLikes |
+----------------+
|             29 |
+----------------+
1 row in set (0.41 sec)

mysql> SELECT FLOOR(AVG(likes)) AS RoundedDownLikes FROM Posts;
+------------------+
| RoundedDownLikes |
+------------------+
|               28 |
+------------------+
1 row in set (0.08 sec)

mysql> SELECT post_id, ROUND(likes, -1) AS RoundedLikes FROM Posts;
+---------+--------------+
| post_id | RoundedLikes |
+---------+--------------+
|       1 |           10 |
|       2 |           30 |
|       3 |           50 |
+---------+--------------+
3 rows in set (0.10 sec)

mysql> SELECT post_id, MOD(likes, 7) AS LikesRemainder FROM Posts;
+---------+----------------+
| post_id | LikesRemainder |
+---------+----------------+
|       1 |              3 |
|       2 |              4 |
|       3 |              1 |
+---------+----------------+
3 rows in set (0.00 sec)

mysql> SELECT post_id, MOD(likes, 7) AS LikesRemainder FROM Posts;
+---------+----------------+
| post_id | LikesRemainder |
+---------+----------------+
|       1 |              3 |
|       2 |              4 |
|       3 |              1 |
+---------+----------------+
3 rows in set (0.00 sec)

mysql> SELECT post_id, SQRT(likes) AS LikesRoot FROM Posts;
+---------+--------------------+
| post_id | LikesRoot          |
+---------+--------------------+
|       1 | 3.1622776601683795 |
|       2 |                  5 |
|       3 | 7.0710678118654755 |
+---------+--------------------+
3 rows in set (0.16 sec)

mysql> tee off;
